# -*- coding: utf-8 -*-
"""
Created on Wed May  6 13:53:54 2015

@author: frm-ag
"""
import matplotlib.pyplot as plt
import numpy as np

data = """
1423737445.579928310,0.0549583,0.0077243
1423737445.502514691,0.0622744,0.00839508
1423737445.422376938,0.0884105,0.00737537
1423737445.343366799,0.120966,0.0107722
1423737445.265363284,0.131584,0.0240205
1423737445.186374024,0.183919,0.0381077
1423737445.029339629,0.0567017,0.039584
1423737444.950337652,0.0999095,0.0245857
1423737444.871358098,0.114324,0.0157834
1423737444.792345860,0.110796,0.0054319
1423737444.714356951,0.111079,0.00227513
1423737444.635346734,0.110094,0.00234573
1423737444.556362571,0.107043,0.00541082
1423737444.477337133,0.1424,0.0127628
1423737444.399372945,0.100239,0.0156901
1423737444.320343172,0.0533444,0.0198616
1423737444.241372279,0.0400406,0.0141437
1423737444.162354943,0.0408506,0.0192065
1423737444.084358000,0.0504498,0.0299156
1423737444.005484537,0.243165,0.0332752
1423737443.769343340,0.0771244,0.0332217
1423737443.690340878,0.105019,0.0349115
1423737443.611347704,0.159041,0.0432834
1423737443.454627881,0.057037,0.094806
1423737443.375337044,0.0639217,0.036856
1423737443.139336782,0.0201997,0.0622118
1423737443.060393757,0.0192419,0.0613197
1423737442.824325339,0.00548491,0.0469225
1423737442.745414511,0.00203711,0.05308
1423737442.667352126,0.00434534,0.0738818
1423737442.589016451,0.00617397,0.102476
1423737442.509316616,0.00788508,0.290297
1423737442.430396427,0.00550038,0.113613
1423737442.352313796,0.00610277,0.122655
1423737442.273362875,0.00551867,0.131177
1423737442.194315928,0.00462999,0.122137
1423737442.115291116,0.00638192,0.112606
1423737442.037336222,0.00573259,0.105061
1423737441.958303450,0.000974786,0.0952525
1423737441.879294911,0.00848475,0.0899387
1423737441.801328914,0.0169629,0.0677169
1423737441.722303197,0.0279458,0.0828494
1423737441.643322039,0.0425334,0.0630601
1423737441.564283819,0.0637788,0.0466999
1423737441.486291700,0.120757,0.0418965
1423737441.329282523,0.00199592,0.0384763
1423737441.172278589,0.000391824,0.0165477
1423737441.093295612,7.4973e-05,0.00332437

"""

data = data.strip().split('\n')

l0 = []
l1 = []
s = []
t=[]

t0 = float(data[-1].split(",")[0]);

# Read the data
for d in data:
 
    t.insert(0,float(d.split(",")[0])-t0) 
    l0_temp = float(d.split(",")[1]);
    l1_temp = float(d.split(",")[2]);

    l0.insert(0,l0_temp)
    l1.insert(0,l1_temp)

# Apply filters to the data
filter = np.array([1.0, 1.0, 1.0, 1.0, 1.0])
filter = filter/sum(filter) # normalize

print filter

l0 = np.convolve(l0,filter, mode='same')
l1 = np.convolve(l1,filter, mode='same')

# Reverse order for test purposes
#l0 = l0[::-1]

# Calculate the norm
for i in range(0,len(t)):
    s.append(l0[i]*l1[i])
    
print np.trapz(s,t)
    
plt.close('all')
plt.plot(t,l0,label="leg0")
plt.plot(t,l1,label="leg1")
plt.plot(t,s,label="product")

print  sum(s)/len(s)

plt.legend()
plt.xlabel("time[steps]")
plt.ylabel("distance to previous position[m]")

