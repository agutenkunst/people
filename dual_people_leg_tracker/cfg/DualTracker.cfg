#!/usr/bin/env python
PACKAGE = 'dual_people_leg_tracker'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add('connection_threshold',             double_t,   0, '[m]', 0.0792, 0.02, .2)
gen.add('min_points_per_group',             int_t,      0, '',    4,    3, 20)


gen.add('leg_reliability_limit',            double_t,   0, '',    0.64,  0, 1)
gen.add('people_probability_limit',         double_t,   0, '',    0.8,  0, 1)
gen.add('new_track_min_probability',        double_t,   0, '',    0.9,  0, 1)

gen.add('publish_leg_measurements',         bool_t,     0, '',    True)
gen.add('publish_leg_velocity',             bool_t,     0, '',    True)
gen.add('publish_people',                   bool_t,     0, '',    True)
gen.add('publish_people_velocity_kalman',   bool_t,     0, '',    True)
gen.add('publish_people_lines_',            bool_t,     0, '',    True)
gen.add('publish_people_3d',                bool_t,     0, '',    True)
gen.add('publish_particle_arrows',         bool_t,     0, '',    True)
gen.add('publish_leg_markers',              bool_t,     0, '',    True)
gen.add('publish_people_markers',           bool_t,     0, '',    False)
gen.add('publish_clusters',                 bool_t,     0, '',    True)
gen.add('publish_particles',                bool_t,     0, '',    True)
gen.add('publish_matches',                  bool_t,     0, '',    True)
gen.add('publish_leg_history',              bool_t,     0, '',    True)
gen.add('publish_people_tracker',           bool_t,     0, '',    True)
gen.add('publish_leg_feature_arrows',       bool_t,     0, '',    True)
gen.add('publish_static_people_trackers',   bool_t,     0, '',    True)
gen.add('publish_people_history',           bool_t,     0, '',    True)
gen.add('publish_leg_labels',               bool_t,     0, '',    True)
gen.add('publish_jpda_associations',        bool_t,     0, '',    True)
gen.add('publish_measurement_labels',       bool_t,     0, '',    True)
gen.add('publish_predicted_leg_positions',  bool_t,     0, '',    True)
gen.add('publish_scans_lines',              bool_t,     0, '',    True)
gen.add('publish_fake_measurements_',       bool_t,     0, '',    True)


gen.add('publish_occlusion_model',          bool_t,     0, '',    True)

gen.add('no_observation_timeout',           double_t,   0, '[s]', 1.2,  0, 5) #Timeout tolerance for no observations
gen.add('max_second_leg_age',               double_t,   0, '[s]', 2.0,  0, 5)
gen.add('max_track_jump',                   double_t,   0, '[m]', 1.0,  0, 5)
gen.add('max_meas_jump',                    double_t,   0, '[m]', 0.75, 0, 5)
gen.add('leg_pair_separation',              double_t,   0, '[m]', 1.0,  0, 2)
gen.add('fixed_frame',                      str_t,      0, 'Fixed Frame', 'odom_combined')
gen.add('use_fake_measurements',            bool_t,     0, '',    True)


gen.add('fake_leg_probability',                   double_t,   0, '', 0.95, 0, 1.0)
gen.add('min_fake_leg_person_probability',        double_t,   0, '', 0.60, 0, 1.0)
gen.add('fake_leg_real_leg_distance',             double_t,   0, '', 0.10, 0, 1.0)
gen.add('fake_leg_range_thres',                   double_t,   0, '', 2.00, 0, 3.0)
gen.add('fake_leg_measurement_probabilty_factor', double_t,   0, '', 1.00, 0, 3.0)
gen.add('min_update_probability',                 double_t,   0, '',0.003, 0, 0.01)


# Leg Feature properties
gen.add('leg_feature_update_cov',           double_t,   0, '',    0.0025,  0.001, 0.01)
gen.add('leg_feature_predict_pos_cov',      double_t,   0, '',    0.05,    0.001, 0.5)
gen.add('leg_feature_predict_vel_cov',      double_t,   0, '',    1.0,     0.001, 2)

exit(gen.generate(PACKAGE, 'dual_tracker', 'DualTracker'))
